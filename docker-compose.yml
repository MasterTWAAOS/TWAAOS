services:
  api:
    build:
      context: .
      dockerfile: ./docker/fastapi/Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend/fastapi:/app
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=twaaos
      - SECRET_KEY=your-secret-key-for-development-only
      - GOOGLE_CLIENT_ID=
    depends_on:
      - db
    restart: always

  flask:
    build:
      context: .
      dockerfile: ./docker/flask/Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./backend/flask:/app
    environment:
      - FASTAPI_BASE_URL=http://api:8000
    depends_on:
      - api
    restart: always

  frontend:
    build:
      context: .
      dockerfile: ./docker/frontend/Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VUE_APP_API_URL=http://api:8000
      - VUE_APP_FLASK_URL=http://flask:5000
    depends_on:
      - api
      - flask
    restart: always

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=twaaos
    ports:
      - "5432:5432"
    restart: always

  cypress:
    build:
      context: .
      dockerfile: ./docker/cypress/Dockerfile
    profiles:
      - testing
    depends_on:
      - frontend
      - api
      - flask
    environment:
      - CYPRESS_baseUrl=http://frontend
    volumes:
      - ./frontend/cypress:/app/cypress
      - ./cypress-results:/app/cypress/results

  sonarqube:
    image: sonarqube:9.9-community
    profiles:
      - sast
    ports:
      - "9000:9000"
    environment:
      - SONAR_FORCEAUTHENTICATION=false
    volumes:
      - sonarqube-data:/opt/sonarqube/data
      - sonarqube-extensions:/opt/sonarqube/extensions
      - sonarqube-logs:/opt/sonarqube/logs
      - sonarqube-temp:/opt/sonarqube/temp
    networks:
      - app-network

volumes:
  postgres_data:
  sonarqube-data:
  sonarqube-extensions:
  sonarqube-logs:
  sonarqube-temp:
  
networks:
  app-network:
    driver: bridge